{"remainingRequest":"/Users/lishentuan/liguotuan/vue-cli3/node_modules/babel-loader/lib/index.js!/Users/lishentuan/liguotuan/vue-cli3/node_modules/eslint-loader/index.js??ref--13-0!/Users/lishentuan/liguotuan/vue-cli3/src/components/pdf/pdf.js","dependencies":[{"path":"/Users/lishentuan/liguotuan/vue-cli3/src/components/pdf/pdf.js","mtime":1597633437616},{"path":"/Users/lishentuan/liguotuan/vue-cli3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lishentuan/liguotuan/vue-cli3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lishentuan/liguotuan/vue-cli3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/lishentuan/liguotuan/vue-cli3/src/components/pdf/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","modules","installedModules","__w_pdfjs_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","pdfjsVersion","pdfjsBuild","pdfjsSharedUtil","pdfjsDisplayAPI","pdfjsDisplayTextLayer","pdfjsDisplayAnnotationLayer","pdfjsDisplayDisplayUtils","pdfjsDisplaySVG","pdfjsDisplayWorkerOptions","pdfjsDisplayAPICompatibility","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","isValidFetchUrl","url","build","version","getDocument","LoopbackPort","PDFDataRangeTransport","PDFWorker","renderTextLayer","AnnotationLayer","createPromiseCapability","PasswordResponses","InvalidPDFException","MissingPDFException","SVGGraphics","NativeImageDecoding","CMapCompressionType","PermissionFlag","UnexpectedResponseException","OPS","VerbosityLevel","UNSUPPORTED_FEATURES","createValidAbsoluteUrl","createObjectURL","removeNullCharacters","shadow","Util","RenderingCancelledException","getFilenameFromUrl","LinkTarget","addLinkAttributes","loadScript","PDFDateString","GlobalWorkerOptions","apiCompatibilityParams","arrayByteLength","arraysToBytes","assert","bytesToString","getVerbosityLevel","info","isArrayBuffer","isArrayEqual","isBool","isEmptyObj","isNum","isString","isSameOrigin","setVerbosityLevel","string32","stringToBytes","stringToPDFString","stringToUTF8String","utf8StringToString","warn","unreachable","IsEvalSupportedCached","IsLittleEndianCached","FormatError","UnknownErrorException","TextRenderingMode","StreamType","PasswordException","AbortException","ImageKind","FontType","AnnotationType","AnnotationStateModelType","AnnotationReviewState","AnnotationReplyType","AnnotationMarkedState","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","BaseException","NONE","DECODE","DISPLAY","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","INFOS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","level","Number","isInteger","msg","console","log","Error","cond","baseUrl","otherUrl","base","URL","origin","e","other","_isValidProtocol","protocol","absoluteUrl","ex","obj","prop","configurable","writable","BaseExceptionClosure","message","constructor","code","details","status","NullCharactersRegExp","str","replace","bytes","length","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","Math","min","chunk","subarray","push","join","Uint8Array","charCodeAt","arr","byteLength","resultLength","pos","data","item","itemLength","set","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","rgbBuf","g","b","m1","m2","xt","yt","p1","applyTransform","p2","slice","p3","p4","max","v","transpose","a","first","second","sqrt","sx","sy","rect","rect1","rect2","compare","orderedX","sort","orderedY","result","normalizeRect","PDFStringTranslateTable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","arr1","arr2","every","element","index","capability","isSettled","promise","Promise","resolve","reject","reason","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","type","ii","b1","b2","b3","d1","d2","d3","d4","PDFPageProxy","PDFDocumentProxy","_util","_display_utils","_font_loader","_api_compatibility","_canvas","_worker_options","_is_node","_message_handler","_metadata","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","createPDFNetworkStream","pdfNetworkStreamFactory","src","task","PDFDocumentLoadingTask","source","range","rangeTransport","worker","window","location","href","pdfBytes","isNaN","rangeChunkSize","CMapReaderFactory","DOMCMapReaderFactory","ignoreErrors","stopAtErrors","pdfBug","NativeImageDecoderValues","values","nativeImageDecoderSupport","includes","maxImageSize","disableFontFace","disableRange","disableStream","disableAutoFetch","disableCreateObjectURL","workerParams","port","workerPort","fromPort","_worker","docId","then","destroyed","_fetchDocument","workerId","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","_transport","send","catch","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","PDFDocumentLoadingTaskClosure","nextDocumentId","onPassword","onProgress","onUnsupportedFeature","transportDestroyed","destroy","onFulfilled","onRejected","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","listener","begin","loaded","total","end","pdfInfo","_pdfInfo","pageNumber","getPage","ref","getPageIndex","getDestinations","id","getDestination","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","deprecated","openAction","dest","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","downloadInfoCapability","getStats","startCleanup","loadingTask","numPages","fingerprint","loadingParams","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","intentStates","scale","rotation","rotate","offsetX","offsetY","dontFlip","arguments","PageViewport","viewBox","view","intent","annotationsPromise","annotationsIntent","getAnnotations","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","time","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","DOMCanvasFactory","webGLContext","WebGLContext","enable","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","indexOf","internalRenderTask","splice","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","renderTask","transparency","initializeGraphics","operatorListChanged","opListReadCapability","opListTask","normalizeWhitespace","disableCombineTextItems","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","combineTextItems","highWaterMark","size","textContent","items","readableStream","streamTextContent","pump","reader","read","done","assign","styles","getReader","pageCache","waitOn","keys","forEach","force","renderCompleted","cancel","clear","all","resetStats","some","operatorListChunk","args","streamReader","_renderPageChunk","setTimeout","cleanup","userUnit","defer","_listeners","_defer","_deferred","transfers","cloneValue","cloned","has","transferable","byteOffset","Array","isArray","desc","getOwnPropertyDescriptor","getPrototypeOf","WeakMap","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","document","pdfjsFilePath","currentScript","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","globalThis","pdfjsWorker","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","removeEventListener","onWorkerError","terminate","_setupFakeWorker","addEventListener","supportTransfers","sendTest","testObj","workerHandler","setup","delete","fontLoader","FontLoader","_onUnsupportedFeature","_params","cMapUrl","isCompressed","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","page","_destroy","terminated","cancelAllRequests","sink","getFullReader","evt","onPull","close","enqueue","onCancel","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","exception","updatePassword","_startRenderPage","exportedData","exportedError","fontRegistry","FontInspector","enabled","registerFont","fontAdded","FontFaceObject","finally","imageData","pageProxy","img","Image","onload","onerror","releaseImageResources","MAX_IMAGE_SIZE_TO_STORE","imageUrl","components","width","height","rgbaLength","buf","Uint8ClampedArray","tmpCanvas","createElement","tmpCtx","getContext","drawImage","getImageData","j","fetched","fetch","builtInCMap","cMapData","featureId","results","metadata","Metadata","contentDispositionFilename","filename","cleanupSuccessful","_objs","objId","resolved","_ensureObj","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","canvas","add","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","DOMSVGFactory","DEFAULT_LINK_REL","SVG_NS","context","canvasAndContext","compressionType","baseURI","response","ok","statusText","arrayBuffer","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","svg","createElementNS","setAttribute","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","abs","x","y","topLeft","bottomRight","applyInverseTransform","SELF","BLANK","PARENT","TOP","link","target","rel","urlNullRemoved","title","onclick","targetStr","anchor","query","substring","lastIndexOf","started","times","Date","now","start","outBuf","longest","duration","padEnd","Response","ReadableStream","script","head","documentElement","appendChild","startsWith","revokeObjectURL","removeAttribute","pdfDateStringRegex","input","RegExp","matches","exec","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","BaseFontLoader","nativeFontFaces","styleElement","nativeFontFace","fonts","rule","getElementsByTagName","styleSheet","sheet","insertRule","cssRules","remove","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","addNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","rules","fontsToLoad","supported","loadingContext","requests","nextRequestId","loadTestFontId","completeRequest","otherRequest","shift","int32","offset","spliceString","insert","chunk1","chunk2","ctx","called","isFontReady","fillText","_loadTestFont","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","loadedName","div","style","visibility","position","top","left","span","fontFamily","body","removeChild","navigator","userAgent","getLoadTestFont","atob","translatedData","compiledGlyphs","FontFace","mimetype","character","cmds","current","js","cmd","compatibilityParams","isIE","test","isIOSChrome","checkOnBlobSupport","checkFontFaceAndImage","freeze","process","versions","_pattern_helper","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","getCurrentTransform","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","ctxRestore","prev","pop","ctxTranslate","ctxScale","ctxTransform","ctxSetTransform","ctxRotate","angle","cosValue","cos","sinValue","sin","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","reset","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","j0","width1","points","POINT_TYPES","lineSize","data0","mask","elem","count","sum","steps","Int32Array","outlines","coords","p0","pp","step","drawOutline","beginPath","jj","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","clone","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","EXECUTION_TIME","EXECUTION_STEPS","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","thisChunkHeight","elemsInThisChunk","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","copyCtxState","sourceCtx","destCtx","properties","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","subtype","backdrop","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","scaleX","scaleY","isEnabled","composed","layer","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillRect","transparentCanvas","compositeCtx","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","depObjId","objsPool","CanvasGraphics_endDrawing","endSMaskGroup","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","CanvasGraphics_setLineJoin","CanvasGraphics_setMiterLimit","limit","CanvasGraphics_setDash","dashArray","dashPhase","flatness","CanvasGraphics_setGState","states","state","suspendSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","startTransformInverse","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","clearRect","resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","getSinglePixelWidth","xw","yh","bezierCurveTo","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","singularValueDecompose2dScale","getPattern","CanvasGraphics_closeStroke","CanvasGraphics_fill","isPatternFill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","path","addToPath","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","getPathGenerator","strokeText","isFontSubpixelAAEnabled","CanvasGraphics_showText","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","scaledAccentX","scaledAccentY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","charWidth","CanvasGraphics_showType3Text","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","makeCssRgb","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","getAxialAlignedBoundingBox","canvasBounds","intersect","floor","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintJpegXObject","w","h","domImage","getCanvasPosition","appendImage","CanvasGraphics_paintImageMaskXObject","compiled","maskCanvas","CanvasGraphics_paintImageMaskXObjectRepeat","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","map","CanvasGraphics_paintInlineImageXObject","widthScale","heightScale","imgToPaint","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","CanvasGraphics_paintInlineImageXObjectGroup","entry","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_paintXObject","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","CanvasGraphics_beginMarkedContentProps","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","inverse","CanvasGraphics_getCanvasPosition","op","ShadingIRs","applyBoundingBox","Path2D","region","RadialAxial","fromIR","RadialAxial_fromIR","raw","colorStops","r1","RadialAxial_getPattern","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","round","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","drawFigures","Mesh","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","createPattern","Dummy","Dummy_fromIR","Dummy_fromIR_getPattern","shadingIR","TilingPatternClosure","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","toString","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","postMessage","_createStreamSink","actionName","handler","ah","_postMessage","queueingStrategy","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","ready","success","_deleteStreamController","allSettled","_xml_parser","_repair","parser","SimpleXMLParser","xmlDocument","parseFromString","_metadataMap","Map","_parse","codes","chars","rdf","nodeName","toLowerCase","firstChild","nextSibling","hasChildNodes","children","childNodes","trim","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","isWhitespace","ch","isWhitespaceString","XMLParserBase","entity","onResolveEntity","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","_resolveEntities","parsed","attrStart","ch2","onError","onEndElement","pi","_parseProcessingInstruction","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","_parseContent","onBeginElement","onText","isEmpty","SimpleDOMNode","nodeValue","parentNode","child","_currentFragment","_stack","_errorCode","parseXml","node","lastElement","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","addRangeListener","_onReceiveData","addProgressListener","_onProgress","addProgressiveReadListener","addProgressiveDoneListener","_onProgressiveDone","transportReady","_enqueue","found","_begin","firstReader","queuedChunks","PDFDataTransportStreamReader","_progressiveDataLength","PDFDataTransportStreamRangeReader","requestDataRange","readers","abort","_loaded","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","_removeRangeReader","_enabled","WebGLUtils","tryInitGL","WebGLUtilsClosure","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","attachShader","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","initSmaskGL","vertexShader","fragmentShader","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","flush","deleteTexture","deleteBuffer","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","initFiguresGL","scaleLocation","offsetLocation","colorLocation","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","renderTextLayerClosure","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","isAllWhitespace","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","_textDivProperties","tx","_viewport","atan2","fontName","PI","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","dataset","_textContentStream","_layoutText","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","_bounds","right","bottom","render","_canceled","textDivs","textDivsLength","_renderingDone","expand","expanded","expandBounds","divProperties","ts","Float64Array","findPositiveMin","boxScale","boxes","box","x1New","x2New","expandBoundsLTR","fakeBoundary","Infinity","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","concat","TextLayerRenderTask","textContentStream","container","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","TextLayer_cancel","_processItems","styleCache","len","_render","TextLayer_render","timeout","mozOpaque","textItems","textStyles","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderParameters","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","_createContainer","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","trigger","popupElement","PopupElement","modificationDate","contents","hideWrapper","popup","className","newWindow","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","destination","getDestinationHash","navigateTo","getAnchorUrl","executeNamedAction","hasPopup","alt","l10nId","l10nArgs","JSON","stringify","_createPopup","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","disabled","readOnly","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","display","_setTextStyle","textAlignment","textAlign","direction","fontWeight","fontStyle","fieldName","buttonValue","selectElement","combo","options","multiSelect","multiple","option","optionElement","displayValue","exportValue","IGNORE_TYPES","parentType","selector","parentId","parentElement","querySelector","parentLeft","parseFloat","parentWidth","pinned","BACKGROUND_ENLIGHT","hideElement","dateObject","toDateObject","date","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","hasAttribute","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","vertices","coordinate","polyline","inkLists","inkList","file","eventBus","dispatch","_download","downloadData","sortedAnnotations","popupAnnotations","annotations","SVG_DEFAULTS","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","adler32","deflateSync","literals","deflateSyncUncompressed","Buffer","from","output","maxBlockLength","deflateBlocks","idat","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","svgElement","loadDependencies","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","defs","addFontStyle","_makeColorN_Pattern","inverseTransform","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","getAttributeNS","clipId","clipPath","clipElement","cloneNode","setStrokeAlpha","setFillAlpha","imgObj","imgEl","imgSrc","cliprect","definitions","rootGroup","_ensureClipGroup","_network_utils","fs","http","https","fileUriRegex","parseUrl","sourceUrl","parsedUrl","parse","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","_setReadableStream","getResponseHeader","validateRangeRequestCapabilities","allowRangeRequests","suggestedLength","extractFilenameFromHeader","_request","_httpHeaders","lstat","stat","createReadStream","createResponseStatusError","validateResponseStatus","_content_disposition","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","decode","err","match","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","_","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","getArrayBuffer","xhr","array","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","listeners","xhrId","pendingRequest","setRequestHeader","expectedStatus","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","abortRequest","_source","_manager","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","_onRangeRequestReaderClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","requestFull","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","getRequestXhr","lengthComputable","isPendingRequest","_requestId","requestRange","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers"],"mappings":"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","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n/* eslint-disable */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__w_pdfjs_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__w_pdfjs_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__w_pdfjs_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.4.456';\nvar pdfjsBuild = '228a591c';\n\nvar pdfjsSharedUtil = __w_pdfjs_require__(1);\n\nvar pdfjsDisplayAPI = __w_pdfjs_require__(3);\n\nvar pdfjsDisplayTextLayer = __w_pdfjs_require__(16);\n\nvar pdfjsDisplayAnnotationLayer = __w_pdfjs_require__(17);\n\nvar pdfjsDisplayDisplayUtils = __w_pdfjs_require__(4);\n\nvar pdfjsDisplaySVG = __w_pdfjs_require__(18);\n\nconst pdfjsDisplayWorkerOptions = __w_pdfjs_require__(10);\n\nconst pdfjsDisplayAPICompatibility = __w_pdfjs_require__(6);\n\n{\n  const {\n    isNodeJS\n  } = __w_pdfjs_require__(7);\n\n  if (isNodeJS) {\n    const PDFNodeStream = __w_pdfjs_require__(19).PDFNodeStream;\n\n    pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = __w_pdfjs_require__(22).PDFNetworkStream;\n\n    let PDFFetchStream;\n\n    if (pdfjsDisplayDisplayUtils.isFetchSupported()) {\n      PDFFetchStream = __w_pdfjs_require__(23).PDFFetchStream;\n    }\n\n    pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n\n      return new PDFNetworkStream(params);\n    });\n  }\n}\nexports.build = pdfjsDisplayAPI.build;\nexports.version = pdfjsDisplayAPI.version;\nexports.getDocument = pdfjsDisplayAPI.getDocument;\nexports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;\nexports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;\nexports.PDFWorker = pdfjsDisplayAPI.PDFWorker;\nexports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;\nexports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;\nexports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;\nexports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;\nexports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;\nexports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;\nexports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;\nexports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;\nexports.CMapCompressionType = pdfjsSharedUtil.CMapCompressionType;\nexports.PermissionFlag = pdfjsSharedUtil.PermissionFlag;\nexports.UnexpectedResponseException = pdfjsSharedUtil.UnexpectedResponseException;\nexports.OPS = pdfjsSharedUtil.OPS;\nexports.VerbosityLevel = pdfjsSharedUtil.VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;\nexports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;\nexports.createObjectURL = pdfjsSharedUtil.createObjectURL;\nexports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;\nexports.shadow = pdfjsSharedUtil.shadow;\nexports.Util = pdfjsSharedUtil.Util;\nexports.RenderingCancelledException = pdfjsDisplayDisplayUtils.RenderingCancelledException;\nexports.getFilenameFromUrl = pdfjsDisplayDisplayUtils.getFilenameFromUrl;\nexports.LinkTarget = pdfjsDisplayDisplayUtils.LinkTarget;\nexports.addLinkAttributes = pdfjsDisplayDisplayUtils.addLinkAttributes;\nexports.loadScript = pdfjsDisplayDisplayUtils.loadScript;\nexports.PDFDateString = pdfjsDisplayDisplayUtils.PDFDateString;\nexports.GlobalWorkerOptions = pdfjsDisplayWorkerOptions.GlobalWorkerOptions;\nexports.apiCompatibilityParams = pdfjsDisplayAPICompatibility.apiCompatibilityParams;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createPromiseCapability = createPromiseCapability;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isArrayEqual = isArrayEqual;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.removeNullCharacters = removeNullCharacters;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\nexports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.NativeImageDecoding = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n\n__w_pdfjs_require__(2);\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nconst NativeImageDecoding = {\n  NONE: \"none\",\n  DECODE: \"decode\",\n  DISPLAY: \"display\"\n};\nexports.NativeImageDecoding = NativeImageDecoding;\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800\n};\nexports.PermissionFlag = PermissionFlag;\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nexports.TextRenderingMode = TextRenderingMode;\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nexports.ImageKind = ImageKind;\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nexports.AnnotationType = AnnotationType;\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\"\n};\nexports.AnnotationStateModelType = AnnotationStateModelType;\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\"\n};\nexports.AnnotationMarkedState = AnnotationMarkedState;\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\"\n};\nexports.AnnotationReviewState = AnnotationReviewState;\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\"\n};\nexports.AnnotationReplyType = AnnotationReplyType;\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nexports.AnnotationFlag = AnnotationFlag;\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\"\n};\nexports.StreamType = StreamType;\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\"\n};\nexports.FontType = FontType;\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nexports.VerbosityLevel = VerbosityLevel;\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nexports.CMapCompressionType = CMapCompressionType;\nconst OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nexports.OPS = OPS;\nconst UNSUPPORTED_FEATURES = {\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  font: \"font\"\n};\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nexports.PasswordResponses = PasswordResponses;\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n\n  try {\n    base = new URL(baseUrl);\n\n    if (!base.origin || base.origin === \"null\") {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\n\nconst BaseException = function BaseExceptionClosure() {\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n  return BaseException;\n}();\n\nexports.BaseException = BaseException;\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n\n}\n\nexports.PasswordException = PasswordException;\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n\n}\n\nexports.UnknownErrorException = UnknownErrorException;\n\nclass InvalidPDFException extends BaseException {}\n\nexports.InvalidPDFException = InvalidPDFException;\n\nclass MissingPDFException extends BaseException {}\n\nexports.MissingPDFException = MissingPDFException;\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n\n}\n\nexports.UnexpectedResponseException = UnexpectedResponseException;\n\nclass FormatError extends BaseException {}\n\nexports.FormatError = FormatError;\n\nclass AbortException extends BaseException {}\n\nexports.AbortException = AbortException;\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n\n  const strBuf = [];\n\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n\n  return bytes;\n}\n\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\n\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n\n  let resultLength = 0;\n\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\n\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  }\n\n};\nexports.IsLittleEndianCached = IsLittleEndianCached;\n\nfunction isEvalSupported() {\n  try {\n    new Function(\"\");\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  }\n\n};\nexports.IsEvalSupportedCached = IsEvalSupportedCached;\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  static transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  }\n\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  }\n\n  static apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  }\n\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  static normalizeRect(rect) {\n    const r = rect.slice(0);\n\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n\n    return r;\n  }\n\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n}\n\nexports.Util = Util;\nconst PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n        strBuf = [];\n\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    }\n\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = function createObjectURLClosure() {\n  const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], {\n        type: contentType\n      });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n      const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n\n    return buffer;\n  };\n}();\n\nexports.createObjectURL = createObjectURL;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDocument = getDocument;\nexports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\nexports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _display_utils = __w_pdfjs_require__(4);\n\nvar _font_loader = __w_pdfjs_require__(5);\n\nvar _api_compatibility = __w_pdfjs_require__(6);\n\nvar _canvas = __w_pdfjs_require__(8);\n\nvar _worker_options = __w_pdfjs_require__(10);\n\nvar _is_node = __w_pdfjs_require__(7);\n\nvar _message_handler = __w_pdfjs_require__(11);\n\nvar _metadata = __w_pdfjs_require__(12);\n\nvar _transport_stream = __w_pdfjs_require__(14);\n\nvar _webgl = __w_pdfjs_require__(15);\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536;\nconst RENDERING_CANCELLED_TIMEOUT = 100;\nlet createPDFNetworkStream;\n\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n  let source;\n\n  if (typeof src === \"string\") {\n    source = {\n      url: src\n    };\n  } else if ((0, _util.isArrayBuffer)(src)) {\n    source = {\n      data: src\n    };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = {\n      range: src\n    };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n    }\n\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n    }\n\n    source = src;\n  }\n\n  const params = Object.create(null);\n  let rangeTransport = null,\n      worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      const pdfBytes = source[key];\n\n      if (typeof pdfBytes === \"string\") {\n        params[key] = (0, _util.stringToBytes)(pdfBytes);\n      } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n      }\n\n      continue;\n    }\n\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.pdfBug = params.pdfBug === true;\n  const NativeImageDecoderValues = Object.values(_util.NativeImageDecoding);\n\n  if (params.nativeImageDecoderSupport === undefined || !NativeImageDecoderValues.includes(params.nativeImageDecoderSupport)) {\n    params.nativeImageDecoderSupport = _api_compatibility.apiCompatibilityParams.nativeImageDecoderSupport || _util.NativeImageDecoding.DECODE;\n  }\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  if (typeof params.disableCreateObjectURL !== \"boolean\") {\n    params.disableCreateObjectURL = _api_compatibility.apiCompatibilityParams.disableCreateObjectURL || false;\n  }\n\n  (0, _util.setVerbosityLevel)(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: _worker_options.GlobalWorkerOptions.workerPort\n    };\n    worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n\n  const docId = task.docId;\n  worker.promise.then(function () {\n    if (task.destroyed) {\n      throw new Error(\"Loading aborted\");\n    }\n\n    return _fetchDocument(worker, params, rangeTransport, docId).then(function (workerId) {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      let networkStream;\n\n      if (rangeTransport) {\n        networkStream = new _transport_stream.PDFDataTransportStream({\n          length: params.length,\n          initialData: params.initialData,\n          progressiveDone: params.progressiveDone,\n          disableRange: params.disableRange,\n          disableStream: params.disableStream\n        }, rangeTransport);\n      } else if (!params.data) {\n        networkStream = createPDFNetworkStream({\n          url: params.url,\n          length: params.length,\n          httpHeaders: params.httpHeaders,\n          withCredentials: params.withCredentials,\n          rangeChunkSize: params.rangeChunkSize,\n          disableRange: params.disableRange,\n          disableStream: params.disableStream\n        });\n      }\n\n      const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n      messageHandler.postMessageTransfers = worker.postMessageTransfers;\n      const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n      task._transport = transport;\n      messageHandler.send(\"Ready\", null);\n    });\n  }).catch(task._capability.reject);\n  return task;\n}\n\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n\n  return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n    docId,\n    apiVersion: '2.4.456',\n    source: {\n      data: source.data,\n      url: source.url,\n      password: source.password,\n      disableAutoFetch: source.disableAutoFetch,\n      rangeChunkSize: source.rangeChunkSize,\n      length: source.length\n    },\n    maxImageSize: source.maxImageSize,\n    disableFontFace: source.disableFontFace,\n    disableCreateObjectURL: source.disableCreateObjectURL,\n    postMessageTransfers: worker.postMessageTransfers,\n    docBaseUrl: source.docBaseUrl,\n    nativeImageDecoderSupport: source.nativeImageDecoderSupport,\n    ignoreErrors: source.ignoreErrors,\n    isEvalSupported: source.isEvalSupported\n  }).then(function (workerId) {\n    if (worker.destroyed) {\n      throw new Error(\"Worker was destroyed\");\n    }\n\n    return workerId;\n  });\n}\n\nconst PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = (0, _util.createPromiseCapability)();\n      this._transport = null;\n      this._worker = null;\n      this.docId = \"d\" + nextDocumentId++;\n      this.destroyed = false;\n      this.onPassword = null;\n      this.onProgress = null;\n      this.onUnsupportedFeature = null;\n    }\n\n    get promise() {\n      return this._capability.promise;\n    }\n\n    destroy() {\n      this.destroyed = true;\n      const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n\n        if (this._worker) {\n          this._worker.destroy();\n\n          this._worker = null;\n        }\n      });\n    }\n\n    then(onFulfilled, onRejected) {\n      throw new Error(\"Removed API method: \" + \"PDFDocumentLoadingTask.then, use the `promise` getter instead.\");\n    }\n\n  }\n\n  return PDFDocumentLoadingTask;\n}();\n\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = (0, _util.createPromiseCapability)();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n\n}\n\nexports.PDFDataRangeTransport = PDFDataRangeTransport;\n\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function (openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  getData() {\n    return this._transport.getData();\n  }\n\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n}\n\nexports.PDFDocumentProxy = PDFDocumentProxy;\n\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  } = {}) {\n    if (arguments.length > 1 || typeof arguments[0] === \"number\") {\n      throw new Error(\"PDFPageProxy.getViewport is called with obsolete arguments.\");\n    }\n\n    return new _display_utils.PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n\n  getAnnotations({\n    intent = null\n  } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n      this.annotationsIntent = intent;\n    }\n\n    return this.annotationsPromise;\n  }\n\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n\n    const intentState = this.intentStates[renderingIntent];\n\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n    const webGLContext = new _webgl.WebGLContext({\n      enable: enableWebGL\n    });\n\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n    intentState.displayReadyCapability.promise.then(transparency => {\n      if (this.pendingCleanup) {\n        complete();\n        return;\n      }\n\n      if (this._stats) {\n        this._stats.time(\"Rendering\");\n      }\n\n      internalRenderTask.initializeGraphics(transparency);\n      internalRenderTask.operatorListChanged();\n    }).catch(complete);\n    return renderTask;\n  }\n\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n        const i = intentState.renderTasks.indexOf(opListTask);\n\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent\n      });\n    }\n\n    return intentState.opListReadCapability.promise;\n  }\n\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n    return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n      pageIndex: this._pageIndex,\n      normalizeWhitespace: normalizeWhitespace === true,\n      combineTextItems: disableCombineTextItems !== true\n    }, {\n      highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n      size(textContent) {\n        return textContent.items.length;\n      }\n\n    });\n  }\n\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      pump();\n    });\n  }\n\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true\n      });\n\n      if (intent === \"oplist\") {\n        return;\n      }\n\n      intentState.renderTasks.forEach(function (renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(function () {});\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup || Object.keys(this.intentStates).some(intent => {\n      const intentState = this.intentStates[intent];\n      return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n    })) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n\n    if (resetStats && this._stats) {\n      this._stats = new _display_utils.StatTimer();\n    }\n\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n\n    if (!intentState) {\n      return;\n    }\n\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  _renderPageChunk(operatorListChunk, intentState) {\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  _pumpOperatorList(args) {\n    (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n    const reader = readableStream.getReader();\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(({\n        value,\n        done\n      }) => {\n        if (done) {\n          intentState.streamReader = null;\n          return;\n        }\n\n        if (this._transport.destroyed) {\n          return;\n        }\n\n        this._renderPageChunk(value, intentState);\n\n        pump();\n      }, reason => {\n        intentState.streamReader = null;\n\n        if (this._transport.destroyed) {\n          return;\n        }\n\n        if (intentState.operatorList) {\n          intentState.operatorList.lastChunk = true;\n\n          for (let i = 0; i < intentState.renderTasks.length; i++) {\n            intentState.renderTasks[i].operatorListChanged();\n          }\n\n          this._tryCleanup();\n        }\n\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.reject(reason);\n        } else if (intentState.opListReadCapability) {\n          intentState.opListReadCapability.reject(reason);\n        } else {\n          throw reason;\n        }\n      });\n    };\n\n    pump();\n  }\n\n  _abortOperatorList({\n    intentState,\n    reason,\n    force = false\n  }) {\n    (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n    if (!intentState.streamReader) {\n      return;\n    }\n\n    if (!force) {\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n\n      if (reason instanceof _display_utils.RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({\n            intentState,\n            reason,\n            force: true\n          });\n\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n\n    intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return;\n    }\n\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n\n      return false;\n    });\n    this.cleanup();\n  }\n\n  get stats() {\n    return this._stats;\n  }\n\n}\n\nexports.PDFPageProxy = PDFPageProxy;\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n\n      if (cloned.has(value)) {\n        return cloned.get(value);\n      }\n\n      let buffer, result;\n\n      if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n        const transferable = transfers && transfers.includes(buffer);\n\n        if (transferable) {\n          result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n        } else {\n          result = new value.constructor(value);\n        }\n\n        cloned.set(value, result);\n        return result;\n      }\n\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result);\n\n      for (const i in value) {\n        let desc,\n            p = value;\n\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n          }\n\n          continue;\n        }\n\n        result[i] = cloneValue(desc.value);\n      }\n\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, {\n          data: obj\n        });\n      });\n\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = {\n      data: cloneValue(obj)\n    };\n\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n\n}\n\nexports.LoopbackPort = LoopbackPort;\n\nconst PDFWorker = function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (_is_node.isNodeJS && typeof require === \"function\") {\n    isWorkerDisabled = true;\n    fallbackWorkerSrc = \"./pdf.worker.js\";\n  } else if (typeof document === \"object\" && \"currentScript\" in document) {\n    const pdfjsFilePath = document.currentScript && document.currentScript.src;\n\n    if (pdfjsFilePath) {\n      fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n    }\n  }\n\n  function getWorkerSrc() {\n    if (_worker_options.GlobalWorkerOptions.workerSrc) {\n      return _worker_options.GlobalWorkerOptions.workerSrc;\n    }\n\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!_is_node.isNodeJS) {\n        (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n\n      return fallbackWorkerSrc;\n    }\n\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {}\n\n    return mainWorkerMessageHandler || null;\n  }\n\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n\n    fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        return mainWorkerMessageHandler;\n      }\n\n      if (_is_node.isNodeJS && typeof require === \"function\") {\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n\n      await (0, _display_utils.loadScript)(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  class PDFWorker {\n    constructor({\n      name = null,\n      port = null,\n      verbosity = (0, _util.getVerbosityLevel)()\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n      this._readyCapability = (0, _util.createPromiseCapability)();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n\n        this._initializeFromPort(port);\n\n        return;\n      }\n\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n      this._messageHandler.on(\"ready\", function () {});\n\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n            workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n          }\n\n          const worker = new Worker(workerSrc);\n          const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              terminateEarly();\n            }\n          };\n\n          worker.addEventListener(\"error\", onWorkerError);\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n\n            if (this.destroyed) {\n              terminateEarly();\n              return;\n            }\n\n            if (data) {\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n\n              this._readyCapability.resolve();\n\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            } else {\n              this._setupFakeWorker();\n\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n\n            if (this.destroyed) {\n              terminateEarly();\n              return;\n            }\n\n            try {\n              sendTest();\n            } catch (e) {\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              (0, _util.warn)(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          sendTest();\n          return;\n        } catch (e) {\n          (0, _util.info)(\"The worker has been disabled.\");\n        }\n      }\n\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        (0, _util.warn)(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n          return;\n        }\n\n        const port = new LoopbackPort();\n        this._port = port;\n        const id = \"fake\" + nextFakeWorkerId++;\n        const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n        const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n\n        this._readyCapability.resolve();\n\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity\n        });\n      }).catch(reason => {\n        this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n      });\n    }\n\n    destroy() {\n      this.destroyed = true;\n\n      if (this._webWorker) {\n        this._webWorker.terminate();\n\n        this._webWorker = null;\n      }\n\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n\n        this._messageHandler = null;\n      }\n    }\n\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n\n  }\n\n  return PDFWorker;\n}();\n\nexports.PDFWorker = PDFWorker;\n\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new _font_loader.FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked\n    });\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = (0, _util.createPromiseCapability)();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n    }\n\n    const waitOn = [];\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const {\n      messageHandler,\n      loadingTask\n    } = this;\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream);\n      this._fullReader = this._networkStream.getFullReader();\n\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total\n        };\n      };\n\n      sink.onPull = () => {\n        this._fullReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n\n          (0, _util.assert)((0, _util.isArrayBuffer)(value));\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = (0, _util.createPromiseCapability)();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength\n        });\n      }, headersCapability.reject);\n      return headersCapability.promise;\n    });\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream);\n\n      const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n\n          (0, _util.assert)((0, _util.isArrayBuffer)(value));\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n    messageHandler.on(\"GetDoc\", ({\n      pdfInfo\n    }) => {\n      this._numPages = pdfInfo.numPages;\n\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new _util.PasswordException(ex.message, ex.code);\n          break;\n\n        case \"InvalidPDFException\":\n          reason = new _util.InvalidPDFException(ex.message);\n          break;\n\n        case \"MissingPDFException\":\n          reason = new _util.MissingPDFException(ex.message);\n          break;\n\n        case \"UnexpectedResponseException\":\n          reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n          break;\n\n        case \"UnknownErrorException\":\n          reason = new _util.UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n\n      loadingTask._capability.reject(reason);\n    });\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = (0, _util.createPromiseCapability)();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password\n          });\n        };\n\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n      }\n\n      return this._passwordCapability.promise;\n    });\n    messageHandler.on(\"DataLoaded\", data => {\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length\n        });\n      }\n\n      this.downloadInfoCapability.resolve(data);\n    });\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const page = this.pageCache[data.pageIndex];\n\n      page._startRenderPage(data.transparency, data.intent);\n    });\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const [id, type, exportedData] = data;\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            (0, _util.warn)(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n\n          if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              }\n\n            };\n          }\n\n          const font = new _font_loader.FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry\n          });\n          this.fontLoader.bind(font).then(() => {\n            this.commonObjs.resolve(id, font);\n          }, reason => {\n            messageHandler.sendWithPromise(\"FontFallback\", {\n              id\n            }).finally(() => {\n              this.commonObjs.resolve(id, font);\n            });\n          });\n          break;\n\n        case \"FontPath\":\n        case \"FontType3Res\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"JpegStream\":\n          return new Promise((resolve, reject) => {\n            const img = new Image();\n\n            img.onload = function () {\n              resolve(img);\n            };\n\n            img.onerror = function () {\n              reject(new Error(\"Error during JPEG image loading\"));\n              (0, _display_utils.releaseImageResources)(img);\n            };\n\n            img.src = imageData;\n          }).then(img => {\n            pageProxy.objs.resolve(id, img);\n          });\n\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n          if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n\n          break;\n\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n\n      return undefined;\n    });\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total\n        });\n      }\n    });\n    messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n    messageHandler.on(\"JpegDecode\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed\"));\n      }\n\n      if (typeof document === \"undefined\") {\n        return Promise.reject(new Error('\"document\" is not defined.'));\n      }\n\n      const [imageUrl, components] = data;\n\n      if (components !== 3 && components !== 1) {\n        return Promise.reject(new Error(\"Only 3 components or 1 component can be returned\"));\n      }\n\n      return new Promise(function (resolve, reject) {\n        const img = new Image();\n\n        img.onload = function () {\n          const {\n            width,\n            height\n          } = img;\n          const size = width * height;\n          const rgbaLength = size * 4;\n          const buf = new Uint8ClampedArray(size * components);\n          let tmpCanvas = document.createElement(\"canvas\");\n          tmpCanvas.width = width;\n          tmpCanvas.height = height;\n          let tmpCtx = tmpCanvas.getContext(\"2d\");\n          tmpCtx.drawImage(img, 0, 0);\n          const data = tmpCtx.getImageData(0, 0, width, height).data;\n\n          if (components === 3) {\n            for (let i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n              buf[j] = data[i];\n              buf[j + 1] = data[i + 1];\n              buf[j + 2] = data[i + 2];\n            }\n          } else if (components === 1) {\n            for (let i = 0, j = 0; i < rgbaLength; i += 4, j++) {\n              buf[j] = data[i];\n            }\n          }\n\n          resolve({\n            data: buf,\n            width,\n            height\n          });\n          (0, _display_utils.releaseImageResources)(img);\n          tmpCanvas.width = 0;\n          tmpCanvas.height = 0;\n          tmpCanvas = null;\n          tmpCtx = null;\n        };\n\n        img.onerror = function () {\n          reject(new Error(\"JpegDecode failed to load image\"));\n          (0, _display_utils.releaseImageResources)(img);\n        };\n\n        img.src = imageUrl;\n      });\n    });\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n\n        fetched = true;\n        this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n          sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n        }).catch(function (reason) {\n          sink.error(reason);\n        });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({\n    featureId\n  }) {\n    if (this.destroyed) {\n      return;\n    }\n\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n\n    const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n      pageIndex\n    }).then(pageInfo => {\n      if (this.destroyed) {\n        throw new Error(\"Transport destroyed\");\n      }\n\n      const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n      this.pageCache[pageIndex] = page;\n      return page;\n    });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref\n    }).catch(function (reason) {\n      return Promise.reject(new Error(reason));\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n      return {\n        info: results[0],\n        metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n        contentDispositionFilename: this._fullReader ? this._fullReader.filename : null\n      };\n    });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n          }\n        }\n      }\n\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return (0, _util.shadow)(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableCreateObjectURL: params.disableCreateObjectURL,\n      disableFontFace: params.disableFontFace,\n      nativeImageDecoderSupport: params.nativeImageDecoderSupport\n    });\n  }\n\n}\n\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n\n    return this._objs[objId] = {\n      capability: (0, _util.createPromiseCapability)(),\n      data: null,\n      resolved: false\n    };\n  }\n\n  get(objId, callback = null) {\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n\n      return null;\n    }\n\n    const obj = this._objs[objId];\n\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    for (const objId in this._objs) {\n      const {\n        data\n      } = this._objs[objId];\n\n      if (typeof Image !== \"undefined\" && data instanceof Image) {\n        (0, _display_utils.releaseImageResources)(data);\n      }\n    }\n\n    this._objs = Object.create(null);\n  }\n\n}\n\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n    this.onContinue = null;\n  }\n\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n\n  then(onFulfilled, onRejected) {\n    throw new Error(\"Removed API method: \" + \"RenderTask.then, use the `promise` getter instead.\");\n  }\n\n}\n\nconst InternalRenderTask = function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = (0, _util.createPromiseCapability)();\n      this.task = new RenderTask(this);\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n        }\n\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background\n      } = this.params;\n      this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n\n      this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n\n      if (this.cancelled) {\n        return;\n      }\n\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n\n      this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n\n          this.callback();\n        }\n      }\n    }\n\n  }\n\n  return InternalRenderTask;\n}();\n\nconst version = '2.4.456';\nexports.version = version;\nconst build = '228a591c';\nexports.build = build;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addLinkAttributes = addLinkAttributes;\nexports.getFilenameFromUrl = getFilenameFromUrl;\nexports.isFetchSupported = isFetchSupported;\nexports.isValidFetchUrl = isValidFetchUrl;\nexports.loadScript = loadScript;\nexports.deprecated = deprecated;\nexports.releaseImageResources = releaseImageResources;\nexports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nexports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n}\n\nexports.DOMCanvasFactory = DOMCanvasFactory;\n\nclass DOMCMapReaderFactory {\n  constructor({\n    baseUrl = null,\n    isCompressed = false\n  }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({\n    name\n  }) {\n    if (!this.baseUrl) {\n      throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n    }\n\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n\n    if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        let cMapData;\n\n        if (this.isCompressed) {\n          cMapData = new Uint8Array((await response.arrayBuffer()));\n        } else {\n          cMapData = (0, _util.stringToBytes)((await response.text()));\n        }\n\n        return {\n          cMapData,\n          compressionType\n        };\n      }).catch(reason => {\n        throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = (0, _util.stringToBytes)(request.responseText);\n          }\n\n          if (cMapData) {\n            resolve({\n              cMapData,\n              compressionType\n            });\n            return;\n          }\n        }\n\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n    });\n  }\n\n}\n\nexports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\nclass DOMSVGFactory {\n  create(width, height) {\n    (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n    return svg;\n  }\n\n  createElement(type) {\n    (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n    return document.createElementNS(SVG_NS, type);\n  }\n\n}\n\nexports.DOMSVGFactory = DOMSVGFactory;\n\nclass PageViewport {\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n  }\n\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n\n  convertToViewportPoint(x, y) {\n    return _util.Util.applyTransform([x, y], this.transform);\n  }\n\n  convertToViewportRectangle(rect) {\n    const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n    const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  convertToPdfPoint(x, y) {\n    return _util.Util.applyInverseTransform([x, y], this.transform);\n  }\n\n}\n\nexports.PageViewport = PageViewport;\n\nclass RenderingCancelledException extends _util.BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n\n}\n\nexports.RenderingCancelledException = RenderingCancelledException;\nconst LinkTarget = {\n  NONE: 0,\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4\n};\nexports.LinkTarget = LinkTarget;\n\nfunction addLinkAttributes(link, {\n  url,\n  target,\n  rel,\n  enabled = true\n} = {}) {\n  (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n  const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\";\n\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n\n  link.target = targetStr;\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      (0, _util.warn)(`Timer is already running for ${name}`);\n    }\n\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      (0, _util.warn)(`Timer has not been started for ${name}`);\n    }\n\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now()\n    });\n    delete this.started[name];\n  }\n\n  toString() {\n    const outBuf = [];\n    let longest = 0;\n\n    for (const time of this.times) {\n      const name = time.name;\n\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n\n    return outBuf.join(\"\");\n  }\n\n}\n\nexports.StatTimer = StatTimer;\n\nfunction isFetchSupported() {\n  return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const {\n      protocol\n    } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false;\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = resolve;\n\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nfunction releaseImageResources(img) {\n  (0, _util.assert)(img instanceof Image, \"Invalid `img` parameter.\");\n  const url = img.src;\n\n  if (typeof url === \"string\" && url.startsWith(\"blob:\") && URL.revokeObjectURL) {\n    URL.revokeObjectURL(url);\n  }\n\n  img.removeAttribute(\"src\");\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  static toDateObject(input) {\n    if (!input || !(0, _util.isString)(input)) {\n      return null;\n    }\n\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n    }\n\n    const matches = pdfDateStringRegex.exec(input);\n\n    if (!matches) {\n      return null;\n    }\n\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n\n}\n\nexports.PDFDateString = PDFDateString;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontLoader = exports.FontFaceObject = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n    }\n\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    if (font.attached || font.missingFile) {\n      return;\n    }\n\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: _util.UNSUPPORTED_FEATURES.font\n          });\n\n          (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n\n      return;\n    }\n\n    const rule = font.createFontFaceRule();\n\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return;\n      }\n\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  get isSyncFontLoadingSupported() {\n    (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  get _loadTestFont() {\n    (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n\n}\n\nlet FontLoader;\nexports.FontLoader = FontLoader;\n{\n  exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n\n      if (typeof navigator === \"undefined\") {\n        supported = true;\n      } else {\n        const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n        if (m && m[1] >= 14) {\n          supported = true;\n        }\n      }\n\n      return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n      };\n\n      return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      function int32(data, offset) {\n        return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n      }\n\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n\n      let i, ii;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n      let called = 0;\n\n      function isFontReady(name, callback) {\n        called++;\n\n        if (called > 30) {\n          (0, _util.warn)(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976;\n      data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858;\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n      }\n\n      if (i < loadTestFontId.length) {\n        checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n      }\n\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n      const names = [];\n\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n\n      names.push(loadTestFontId);\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n\n      document.body.appendChild(div);\n      isFontReady(loadTestFontId, function () {\n        document.body.removeChild(div);\n        request.complete();\n      });\n    }\n\n  };\n}\n\nclass FontFaceObject {\n  constructor(translatedData, {\n    isEvalSupported = true,\n    disableFontFace = false,\n    ignoreErrors = false,\n    onUnsupportedFeature = null,\n    fontRegistry = null\n  }) {\n    this.compiledGlyphs = Object.create(null);\n\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n\n    const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: _util.UNSUPPORTED_FEATURES.font\n        });\n      }\n\n      (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n      return this.compiledGlyphs[character] = function (c, size) {};\n    }\n\n    if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n      let args,\n          js = \"\";\n\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n\n      return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n    }\n\n    return this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n\n        c[current.cmd].apply(c, current.args);\n      }\n    };\n  }\n\n}\n\nexports.FontFaceObject = FontFaceObject;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nconst compatibilityParams = Object.create(null);\n{\n  const {\n    isNodeJS\n  } = __w_pdfjs_require__(7);\n\n  const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n  const isIE = /Trident/.test(userAgent);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  (function checkFontFaceAndImage() {\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n      compatibilityParams.nativeImageDecoderSupport = \"none\";\n    }\n  })();\n}\nexports.apiCompatibilityParams = Object.freeze(compatibilityParams);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNodeJS = void 0;\nconst isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions[\"nw\"] && !process.versions[\"electron\"];\nexports.isNodeJS = isNodeJS;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CanvasGraphics = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _pattern_helper = __w_pdfjs_require__(9);\n\nvar MIN_FONT_SIZE = 16;\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\nvar MIN_WIDTH_FACTOR = 0.65;\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      }\n    });\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        var m = this._transformMatrix;\n        var a = m[0],\n            b = m[1],\n            c = m[2],\n            d = m[3],\n            e = m[4],\n            f = m[5];\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n        return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n      }\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n\n      this._transformStack.push(old);\n\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n\n      if (prev) {\n        this._transformMatrix = prev;\n\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n      var m = this._transformMatrix;\n      this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = function CachedCanvasesClosure() {\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n      var canvasEntry;\n\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n\n      return canvasEntry;\n    },\n\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    }\n\n  };\n  return CachedCanvases;\n}();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n  var width = imgData.width,\n      height = imgData.height;\n  var i,\n      j,\n      j0,\n      width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n  var lineSize = width + 7 & ~7,\n      data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n      pos = 0,\n      ii;\n\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n        elem = data0[i];\n\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  var count = 0;\n  pos = 0;\n\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n\n    pos++;\n  }\n\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n    for (j = 1; j < width; j++) {\n      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n\n    pos++;\n  }\n\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n\n    while (p < end && !points[p]) {\n      p++;\n    }\n\n    if (p === end) {\n      continue;\n    }\n\n    var coords = [p % width1, i];\n    var type = points[p],\n        p0 = p,\n        pp;\n\n    do {\n      var step = steps[type];\n\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n\n      if (pp !== 5 && pp !== 10) {\n        type = pp;\n        points[p] = 0;\n      } else {\n        type = pp & 0x33 * type >> 4;\n        points[p] &= type >> 2 | type << 2;\n      }\n\n      coords.push(p % width1);\n      coords.push(p / width1 | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n\n    for (var i = 0, ii = outlines.length; i < ii; i++) {\n      var o = outlines[i];\n      c.moveTo(o[0], o[1]);\n\n      for (var j = 2, jj = o.length; j < jj; j += 2) {\n        c.lineTo(o[j], o[j + 1]);\n      }\n    }\n\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = function CanvasExtraStateClosure() {\n  function CanvasExtraState() {\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = _util.IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.x = 0;\n    this.y = 0;\n    this.lineX = 0;\n    this.lineY = 0;\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.textRise = 0;\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  };\n  return CanvasExtraState;\n}();\n\nvar CanvasGraphics = function CanvasGraphicsClosure() {\n  var EXECUTION_TIME = 15;\n  var EXECUTION_STEPS = 10;\n\n  function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n    if (canvasCtx) {\n      addContextCurrentTransform(canvasCtx);\n    }\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    var height = imgData.height,\n        width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n        destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = width + 7 >> 3;\n      var white = 0xffffffff;\n      var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n\n        for (j = elemsInThisChunk; j--;) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n        width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      var destPos = 3;\n\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n        bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n        bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = layerData[i] * alpha * scale | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n\n    for (var i = 3; i < length; i += 4) {\n      var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n      layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n    }\n  }\n\n  function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n    var composeFn;\n\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n\n      composeFn(maskData.data, layerData.data, transferMap);\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n    ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n    var backdrop = smask.backdrop || null;\n\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop\n        }\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n\n    genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null\n    }) {\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== _util.OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n\n          steps = 0;\n        }\n      }\n    },\n    endDrawing: function CanvasGraphics_endDrawing() {\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n\n    setRenderingIntent(intent) {},\n\n    setFlatness(flatness) {},\n\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n\n            this.current.activeSMask = value ? this.tempSMask : null;\n\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n      this.ctx.restore();\n      this.ctx.save();\n      copyCtxState(groupCtx, this.ctx);\n      this.current.resumeSMaskCtx = groupCtx;\n\n      var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n\n      var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n\n      if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n        this.pendingClip = null;\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n      this._cachedGetSinglePixelWidth = null;\n    },\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n          y = current.y;\n\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case _util.OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n\n          case _util.OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n\n          case _util.OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n\n          case _util.OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n            j += 6;\n            break;\n\n          case _util.OPS.curveTo2:\n            ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n\n          case _util.OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n\n          case _util.OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      ctx.globalAlpha = this.current.strokeAlpha;\n\n      if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n        ctx.save();\n        const transform = ctx.mozCurrentTransform;\n\n        const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n        ctx.stroke();\n      }\n\n      if (consumePath) {\n        this.consumePath();\n      }\n\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = _util.IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return;\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n      let bold = \"normal\";\n\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n      let browserFontSize = size;\n\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n\n      this.current.fontSizeScale = size / browserFontSize;\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      const patternFill = current.patternFill && font.data;\n      var addToPath;\n\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          ctx.fill();\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      } else {\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          ctx.fillText(character, x, y);\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      const {\n        context: ctx\n      } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n\n      return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n      var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n      ctx.save();\n      let patternTransform;\n\n      if (current.patternFill) {\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n      var x = 0,\n          i;\n\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n\n        if ((0, _util.isNum)(glyph)) {\n          x += spacingDir * glyph * fontSize / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n          }\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n            }\n          }\n        }\n\n        var charWidth;\n\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      ctx.restore();\n    },\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n\n      this._cachedGetSinglePixelWidth = null;\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n\n        if ((0, _util.isNum)(glyph)) {\n          spacingLength = spacingDir * glyph * fontSize / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n        if (!operatorList) {\n          (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n        width = transformed[0] * fontSize + spacing;\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n\n      ctx.restore();\n      this.processingType3 = null;\n    },\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n          }\n        };\n        pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n      } else {\n        pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n      }\n\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = _util.Util.makeCssRgb(r, g, b);\n\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = _util.Util.makeCssRgb(r, g, b);\n\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n      this.save();\n      var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n      var inv = ctx.mozCurrentTransformInverse;\n\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = _util.Util.applyTransform([0, 0], inv);\n\n        var br = _util.Util.applyTransform([0, height], inv);\n\n        var ul = _util.Util.applyTransform([width, 0], inv);\n\n        var ur = _util.Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      (0, _util.unreachable)(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      (0, _util.unreachable)(\"Should not call beginImageData\");\n    },\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n\n      if (!group.isolated) {\n        (0, _util.info)(\"TODO: Support non-isolated groups.\");\n      }\n\n      if (group.knockout) {\n        (0, _util.warn)(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n      var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n      bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n          scaleY = 1;\n\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n\n      if (group.smask) {\n        cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n      }\n\n      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null\n        });\n      } else {\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n      this.current.activeSMask = null;\n    },\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n\n      this.restore();\n    },\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n    beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n    paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n      const domImage = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n      if (!domImage) {\n        (0, _util.warn)(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.save();\n      var ctx = this.ctx;\n      ctx.scale(1 / w, -1 / h);\n      ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height, 0, -h, w, h);\n\n      if (this.imageLayer) {\n        var currentTransform = ctx.mozCurrentTransformInverse;\n        var position = this.getCanvasPosition(0, 0);\n        this.imageLayer.appendImage({\n          objId,\n          left: position[0],\n          top: position[1],\n          width: w / currentTransform[0],\n          height: h / currentTransform[3]\n        });\n      }\n\n      this.restore();\n    },\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n          height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({\n            data: img.data,\n            width,\n            height\n          });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n      putBinaryImageMask(maskCtx, img);\n      maskCtx.globalCompositeOperation = \"source-in\";\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n      maskCtx.restore();\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n      putBinaryImageMask(maskCtx, imgData);\n      maskCtx.globalCompositeOperation = \"source-in\";\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n      maskCtx.restore();\n      var ctx = this.ctx;\n\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n            height = image.height;\n        var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n        putBinaryImageMask(maskCtx, image);\n        maskCtx.globalCompositeOperation = \"source-in\";\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n        maskCtx.restore();\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n      if (!imgData) {\n        (0, _util.warn)(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n      const imgData = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n      if (!imgData) {\n        (0, _util.warn)(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height\n        });\n      }\n\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n      this.save();\n      ctx.scale(1 / width, -1 / height);\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n          b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n          d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n      var imgToPaint, tmpCanvas;\n\n      if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n          paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n\n      while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n        var newWidth = paintWidth,\n            newHeight = paintHeight;\n\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n\n        tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n\n      ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3]\n        });\n      }\n\n      this.restore();\n    },\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h\n          });\n        }\n\n        ctx.restore();\n      }\n    },\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n    paintXObject: function CanvasGraphics_paintXObject() {\n      (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n    },\n    markPoint: function CanvasGraphics_markPoint(tag) {},\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n    beginCompat: function CanvasGraphics_beginCompat() {},\n    endCompat: function CanvasGraphics_endCompat() {},\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n\n        this.pendingClip = null;\n      }\n\n      ctx.beginPath();\n    },\n\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    },\n\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n    }\n  };\n\n  for (var op in _util.OPS) {\n    CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n}();\n\nexports.CanvasGraphics = CanvasGraphics;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getShadingPatternFromIR = getShadingPatternFromIR;\nexports.TilingPattern = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n\n        return grad;\n      }\n    };\n  }\n};\n\nvar createMeshCanvas = function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    var coords = context.coords,\n        colors = context.colors;\n    var bytes = data.data,\n        rowSize = data.width * 4;\n    var tmp;\n\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n    if (y1 >= y3) {\n      return;\n    }\n\n    var c1r = colors[c1],\n        c1g = colors[c1 + 1],\n        c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n        c2g = colors[c2 + 1],\n        c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n        c3g = colors[c3 + 1],\n        c3b = colors[c3 + 2];\n    var minY = Math.round(y1),\n        maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n\n      for (var x = x1_; x <= x2_; x++) {\n        let k = (xa - x) / (xa - xb);\n\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n\n        bytes[j++] = car - (car - cbr) * k | 0;\n        bytes[j++] = cag - (cag - cbg) * k | 0;\n        bytes[j++] = cab - (cab - cbb) * k | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n            drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n          }\n        }\n\n        break;\n\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n        }\n\n        break;\n\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n    var EXPECTED_SCALE = 1.1;\n    var MAX_PATTERN_SIZE = 3000;\n    var BORDER_SIZE = 2;\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n    var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY\n    };\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n    var canvas, tmpCanvas, i, ii;\n\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context\n      });\n      tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n      var tmpCtx = tmpCanvas.context;\n      var data = tmpCtx.createImageData(width, height);\n\n      if (backgroundColor) {\n        var bytes = data.data;\n\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY\n    };\n  }\n\n  return createMeshCanvas;\n}();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n\n        if (shadingFill) {\n          scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n          if (matrix) {\n            var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      }\n    };\n  }\n};\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      }\n    };\n  }\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2\n  };\n  var MAX_PATTERN_SIZE = 3000;\n\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n      (0, _util.info)(\"TilingType: \" + tilingType);\n      var x0 = bbox[0],\n          y0 = bbox[1],\n          x1 = bbox[2],\n          y1 = bbox[3];\n\n      var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n      var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n      var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n      var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n      var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n      graphics.executeOperatorList(operatorList);\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n    getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n      step = Math.abs(step);\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n\n      return {\n        scale,\n        size\n      };\n    },\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n      const context = graphics.ctx,\n            current = graphics.current;\n\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n\n        case PaintType.UNCOLORED:\n          var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n\n        default:\n          throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    }\n  };\n  return TilingPattern;\n}();\n\nexports.TilingPattern = TilingPattern;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GlobalWorkerOptions = void 0;\nconst GlobalWorkerOptions = Object.create(null);\nexports.GlobalWorkerOptions = GlobalWorkerOptions;\nGlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\nGlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageHandler = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2\n};\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8\n};\n\nfunction wrapReason(reason) {\n  if (typeof reason !== \"object\" || reason === null) {\n    return reason;\n  }\n\n  switch (reason.name) {\n    case \"AbortException\":\n      return new _util.AbortException(reason.message);\n\n    case \"MissingPDFException\":\n      return new _util.MissingPDFException(reason.message);\n\n    case \"UnexpectedResponseException\":\n      return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n    case \"UnknownErrorException\":\n      return new _util.UnknownErrorException(reason.message, reason.details);\n\n    default:\n      return new _util.UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n\n      if (data.stream) {\n        this._processStreamMessage(data);\n\n        return;\n      }\n\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n\n        return;\n      }\n\n      const action = this.actionHandler[data.action];\n\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n\n      if (data.callbackId) {\n        const sourceName = this.sourceName;\n        const targetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            callback: CallbackKind.DATA,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            callback: CallbackKind.ERROR,\n            callbackId: data.callbackId,\n            reason: wrapReason(reason)\n          });\n        });\n        return;\n      }\n\n      if (data.streamId) {\n        this._createStreamSink(data);\n\n        return;\n      }\n\n      action(data.data);\n    };\n\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    const ah = this.actionHandler;\n\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n\n    ah[actionName] = handler;\n  }\n\n  send(actionName, data, transfers) {\n    this._postMessage({\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data\n    }, transfers);\n  }\n\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = (0, _util.createPromiseCapability)();\n    this.callbackCapabilities[callbackId] = capability;\n\n    try {\n      this._postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        callbackId,\n        data\n      }, transfers);\n    } catch (ex) {\n      capability.reject(ex);\n    }\n\n    return capability.promise;\n  }\n\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n    return new ReadableStream({\n      start: controller => {\n        const startCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId] = {\n          controller,\n          startCall: startCapability,\n          pullCall: null,\n          cancelCall: null,\n          isClosed: false\n        };\n\n        this._postMessage({\n          sourceName,\n          targetName,\n          action: actionName,\n          streamId,\n          data,\n          desiredSize: controller.desiredSize\n        }, transfers);\n\n        return startCapability.promise;\n      },\n      pull: controller => {\n        const pullCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId].pullCall = pullCapability;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.PULL,\n          streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: reason => {\n        (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n        const cancelCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId].cancelCall = cancelCapability;\n        this.streamControllers[streamId].isClosed = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CANCEL,\n          streamId,\n          reason: wrapReason(reason)\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  }\n\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = (0, _util.createPromiseCapability)();\n          this.ready = this.sinkCapability.promise;\n        }\n\n        self._postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ENQUEUE,\n          streamId,\n          chunk\n        }, transfers);\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n        if (this.isCancelled) {\n          return;\n        }\n\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      },\n\n      sinkCapability: (0, _util.createPromiseCapability)(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(function () {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        success: true\n      });\n    }, function (reason) {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        reason: wrapReason(reason)\n      });\n    });\n  }\n\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n        }\n\n        break;\n\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n        }\n\n        break;\n\n      case StreamKind.PULL:\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n          break;\n        }\n\n        if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const {\n          onPull\n        } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        break;\n\n      case StreamKind.ENQUEUE:\n        (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n\n      case StreamKind.CLOSE:\n        (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n\n        this._deleteStreamController(streamId);\n\n        break;\n\n      case StreamKind.ERROR:\n        (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n        this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n        this._deleteStreamController(streamId);\n\n        break;\n\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n        }\n\n        this._deleteStreamController(streamId);\n\n        break;\n\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n\n        const {\n          onCancel\n        } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  async _deleteStreamController(streamId) {\n    await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n      return capability && capability.promise;\n    }));\n    delete this.streamControllers[streamId];\n  }\n\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n}\n\nexports.MessageHandler = MessageHandler;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Metadata = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _xml_parser = __w_pdfjs_require__(13);\n\nclass Metadata {\n  constructor(data) {\n    (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n    data = this._repair(data);\n    const parser = new _xml_parser.SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n      const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n        return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n      }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n        switch (name) {\n          case \"amp\":\n            return \"&\";\n\n          case \"apos\":\n            return \"'\";\n\n          case \"gt\":\n            return \">\";\n\n          case \"lt\":\n            return \"<\";\n\n          case \"quot\":\n            return '\"';\n        }\n\n        throw new Error(`_repair: ${name} isn't defined.`);\n      });\n      let chars = \"\";\n\n      for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n        const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n\n        if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n          chars += String.fromCharCode(code);\n        } else {\n          chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n        }\n      }\n\n      return \">\" + chars;\n    });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      rdf = rdf.firstChild;\n\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n\n}\n\nexports.Metadata = Metadata;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleXMLParser = void 0;\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n\n        case \"gt\":\n          return \">\";\n\n        case \"amp\":\n          return \"&\";\n\n        case \"quot\":\n          return '\"';\n      }\n\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n      ++pos;\n    }\n\n    const name = s.substring(start, pos);\n    skipWs();\n\n    while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n      skipWs();\n      let attrName = \"\",\n          attrValue = \"\";\n\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n\n      skipWs();\n\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n\n      if (attrEndIndex < 0) {\n        return null;\n      }\n\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue)\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n\n    return {\n      name,\n      attributes,\n      parsed: pos - start\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n      ++pos;\n    }\n\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n\n          case \"?\":\n            ++j;\n\n            const pi = this._parseProcessingInstruction(s, j);\n\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                  return;\n                }\n\n                complexDoctype = true;\n              }\n\n              const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n\n            break;\n\n          default:\n            const content = this._parseContent(s, j);\n\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n\n            let isClosed = false;\n\n            if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n              isClosed = true;\n            } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n    Object.defineProperty(this, \"parentNode\", {\n      value: null,\n      writable: true\n    });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n\n    if (!childNodes) {\n      return undefined;\n    }\n\n    const index = childNodes.indexOf(this);\n\n    if (index === -1) {\n      return undefined;\n    }\n\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n\n    return this.childNodes.map(function (child) {\n      return child.textContent;\n    }).join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined;\n    }\n\n    const [documentElement] = this._currentFragment;\n\n    if (!documentElement) {\n      return undefined;\n    }\n\n    return {\n      documentElement\n    };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n\n    const node = new SimpleDOMNode(\"#text\", text);\n\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n\n    this._currentFragment.push(node);\n\n    if (isEmpty) {\n      return;\n    }\n\n    this._stack.push(this._currentFragment);\n\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n\n    if (!lastElement) {\n      return;\n    }\n\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n\n}\n\nexports.SimpleXMLParser = SimpleXMLParser;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDataTransportStream = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    (0, _util.assert)(pdfDataRangeTransport);\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    const initialData = params.initialData;\n\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({\n        begin,\n        chunk\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({\n        loaded,\n        total\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({\n        chunk\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n\n        rangeReader._enqueue(buffer);\n\n        return true;\n      });\n\n      (0, _util.assert)(found);\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      const firstReader = this._rangeReaders[0];\n\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({\n          loaded: evt.loaded\n        });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({\n          loaded: evt.loaded,\n          total: evt.total\n        });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader);\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n    this._rangeReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeReaders.slice(0);\n\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n\n    this._pdfDataRangeTransport.abort();\n  }\n\n}\n\nexports.PDFDataTransportStream = PDFDataTransportStream;\n\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n\n    this._done = true;\n  }\n\n}\n\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n\n      requestsCapability.resolve({\n        value: chunk,\n        done: false\n      });\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n    }\n\n    this._done = true;\n\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n\n    this._stream._removeRangeReader(this);\n  }\n\n}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLContext = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nclass WebGLContext {\n  constructor({\n    enable = false\n  }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n\n    return (0, _util.shadow)(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({\n    layer,\n    mask,\n    properties\n  }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({\n    width,\n    height,\n    backgroundColor,\n    figures,\n    context\n  }) {\n    return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n\n}\n\nexports.WebGLContext = WebGLContext;\n\nvar WebGLUtils = function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n\n    return shader;\n  }\n\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n\n    return program;\n  }\n\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false\n    });\n  }\n\n  var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n  var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n        height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n\n    var cache = smaskCache,\n        canvas = cache.canvas,\n        gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n\n    gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.flush();\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n    return canvas;\n  }\n\n  var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n  var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n\n    var cache = figuresCache,\n        canvas = cache.canvas,\n        gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n    var count = 0;\n    var i, ii, rows;\n\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n        colorsMap = context.colors;\n    var pIndex = 0,\n        cIndex = 0;\n\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = ps.length / cols | 0;\n\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n\n          break;\n\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n\n          break;\n      }\n    }\n\n    if (backgroundColor) {\n      gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n    gl.flush();\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n\n      return false;\n    },\n\n    composeSMask,\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n\n      smaskCache = null;\n      figuresCache = null;\n    }\n\n  };\n}();\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderTextLayer = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar renderTextLayer = function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1\n    };\n\n    task._textDivs.push(textDiv);\n\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n\n      task._textDivProperties.set(textDiv, textDivProperties);\n\n      return;\n    }\n\n    var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n    textDiv.textContent = geom.str;\n\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n\n    if (geom.str.length > 1) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n\n    task._textDivProperties.set(textDiv, textDivProperties);\n\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n          angleSin = 0;\n\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n\n      var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n      var m, b;\n\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n\n      var divProperties = task._textDivProperties.get(div);\n\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n        task._textDivProperties.set(div, divProperties);\n\n        continue;\n      }\n\n      var e = expanded[i],\n          b = bounds[i];\n      var m = b.m,\n          c = m[0],\n          s = m[1];\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, i) {\n        var t = _util.Util.applyTransform(p, m);\n\n        ts[i + 0] = c && (e.left - t[0]) / c;\n        ts[i + 4] = s && (e.top - t[1]) / s;\n        ts[i + 8] = c && (e.right - t[0]) / c;\n        ts[i + 12] = s && (e.bottom - t[1]) / s;\n        ts[i + 16] = s && (e.left - t[0]) / -s;\n        ts[i + 20] = c && (e.top - t[1]) / c;\n        ts[i + 24] = s && (e.right - t[0]) / -s;\n        ts[i + 28] = c && (e.bottom - t[1]) / c;\n        ts[i + 32] = c && (e.left - t[0]) / -c;\n        ts[i + 36] = s && (e.top - t[1]) / -s;\n        ts[i + 40] = c && (e.right - t[0]) / -c;\n        ts[i + 44] = s && (e.bottom - t[1]) / -s;\n        ts[i + 48] = s && (e.left - t[0]) / s;\n        ts[i + 52] = c && (e.top - t[1]) / -c;\n        ts[i + 56] = s && (e.right - t[0]) / s;\n        ts[i + 60] = c && (e.bottom - t[1]) / -c;\n      });\n\n      var findPositiveMin = function (ts, offset, count) {\n        var result = 0;\n\n        for (var i = 0; i < count; i++) {\n          var t = ts[offset++];\n\n          if (t > 0) {\n            result = result ? Math.min(t, result) : t;\n          }\n        }\n\n        return result;\n      };\n\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0\n      };\n    });\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n          b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0\n    };\n    var horizon = [{\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary\n    }];\n    bounds.forEach(function (boundary) {\n      var i = 0;\n\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n\n      var j = horizon.length - 1;\n\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n          k,\n          maxXNew = -Infinity;\n\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n\n        if (affectedBoundary.x2 > boundary.x1) {\n          xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          xNew = affectedBoundary.x2New;\n        }\n\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      boundary.x1New = maxXNew;\n\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n\n        if (affectedBoundary.x2New === undefined) {\n          if (affectedBoundary.x2 > boundary.x1) {\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      var changedHorizon = [],\n          lastBoundary = null;\n\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n        if (lastBoundary === useBoundary) {\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary\n        });\n      }\n\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary\n        });\n      }\n\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n\n        var used = false;\n\n        for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n\n        for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n    });\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = (0, _util.createPromiseCapability)();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    this._capability.promise.finally(() => {\n      if (this._layoutTextCtx) {\n        this._layoutTextCtx.canvas.width = 0;\n        this._layoutTextCtx.canvas.height = 0;\n        this._layoutTextCtx = null;\n      }\n    }).catch(() => {});\n  }\n\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n\n      if (this._reader) {\n        this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n        this._reader = null;\n      }\n\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n\n      if (textDivProperties.canvasWidth !== 0) {\n        const {\n          fontSize,\n          fontFamily\n        } = textDiv.style;\n\n        if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n\n        const {\n          width\n        } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n\n        textDiv.style.transform = transform;\n      }\n\n      this._textDivProperties.set(textDiv, textDivProperties);\n\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = (0, _util.createPromiseCapability)();\n      let styleCache = Object.create(null);\n      const canvas = document.createElement(\"canvas\");\n      canvas.mozOpaque = true;\n      this._layoutTextCtx = canvas.getContext(\"2d\", {\n        alpha: false\n      });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n\n        this._processItems(textItems, textStyles);\n\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({\n            value,\n            done\n          }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n\n            this._processItems(value.items, styleCache);\n\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n\n        if (!timeout) {\n          render(this);\n        } else {\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n\n      const transformBuf = [],\n            paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    }\n  };\n\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection\n    });\n\n    task._render(renderParameters.timeout);\n\n    return task;\n  }\n\n  return renderTextLayer;\n}();\n\nexports.renderTextLayer = renderTextLayer;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationLayer = void 0;\n\nvar _display_utils = __w_pdfjs_require__(4);\n\nvar _util = __w_pdfjs_require__(1);\n\nclass AnnotationElementFactory {\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case _util.AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case _util.AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case _util.AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n\n            return new PushButtonWidgetAnnotationElement(parameters);\n\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n\n        return new WidgetAnnotationElement(parameters);\n\n      case _util.AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case _util.AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case _util.AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case _util.AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case _util.AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case _util.AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case _util.AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case _util.AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case _util.AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case _util.AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case _util.AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case _util.AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case _util.AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case _util.AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case _util.AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n          page = this.page,\n          viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n\n      if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case _util.AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case _util.AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case _util.AnnotationBorderStyleType.BEVELED:\n          (0, _util.warn)(\"Unimplemented border style: beveled\");\n          break;\n\n        case _util.AnnotationBorderStyleType.INSET:\n          (0, _util.warn)(\"Unimplemented border style: inset\");\n          break;\n\n        case _util.AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n      } else {\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  _createPopup(container, trigger, data) {\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true\n    });\n    const popup = popupElement.render();\n    popup.style.left = container.style.width;\n    container.appendChild(popup);\n  }\n\n  render() {\n    (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n    super(parameters, isRenderable);\n  }\n\n  render() {\n    this.container.className = \"linkAnnotation\";\n    const {\n      data,\n      linkService\n    } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      (0, _display_utils.addLinkAttributes)(link, {\n        url: data.url,\n        target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n\n      return false;\n    };\n\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n\n    link.className = \"internalLink\";\n  }\n\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({\n      type: this.data.name\n    });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    return this.container;\n  }\n\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n    super(parameters, isRenderable);\n  }\n\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    this.container.className = \"textWidgetAnnotation\";\n    let element = null;\n\n    if (this.renderInteractiveForms) {\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n      let font = null;\n\n      if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  _setTextStyle(element, font) {\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n\n    if (!this.data.combo) {\n      selectElement.size = this.data.options.length;\n\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  render() {\n    const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents\n    });\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${parentElement.style.top}`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n    const color = this.color;\n\n    if (color) {\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString()\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n\n    popup.appendChild(contents);\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n\n    return p;\n  }\n\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n    let points = [];\n\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n\n    points = points.join(\" \");\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    super(parameters);\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n    this.containerClassName = \"inkAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      let points = [];\n\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n\n      points = points.join(\" \");\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, true);\n    const {\n      filename,\n      content\n    } = this.data.file;\n    this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: (0, _util.stringToPDFString)(filename),\n        filename,\n        content\n      });\n    }\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  _download() {\n    if (!this.downloadManager) {\n      (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n\n}\n\nclass AnnotationLayer {\n  static render(parameters) {\n    const sortedAnnotations = [],\n          popupAnnotations = [];\n\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n\n      if (data.annotationType === _util.AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n\n      sortedAnnotations.push(data);\n    }\n\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new _display_utils.DOMSVGFactory()\n      });\n\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(`[data-annotation-id=\"${data.id}\"]`);\n\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      }\n    }\n\n    parameters.div.removeAttribute(\"hidden\");\n  }\n\n}\n\nexports.AnnotationLayer = AnnotationLayer;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGGraphics = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _display_utils = __w_pdfjs_require__(4);\n\nvar _is_node = __w_pdfjs_require__(7);\n\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nexports.SVGGraphics = SVGGraphics;\n{\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\"\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = function () {\n    const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n    const CHUNK_WRAPPER_SIZE = 12;\n    const crcTable = new Int32Array(256);\n\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n        } else {\n          c = c >> 1 & 0x7fffffff;\n        }\n      }\n\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = crc >>> 8 ^ b;\n      }\n\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n      data[p] = len >> 24 & 0xff;\n      data[p + 1] = len >> 16 & 0xff;\n      data[p + 2] = len >> 8 & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n      data.set(body, p);\n      p += body.length;\n      const crc = crc32(data, offset + 4, p);\n      data[p] = crc >> 24 & 0xff;\n      data[p + 1] = crc >> 16 & 0xff;\n      data[p + 2] = crc >> 8 & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n\n      return b << 16 | a;\n    }\n\n    function deflateSync(literals) {\n      if (!_is_node.isNodeJS) {\n        return deflateSyncUncompressed(literals);\n      }\n\n      try {\n        let input;\n\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          input = Buffer.from(literals);\n        }\n\n        const output = require(\"zlib\").deflateSync(input, {\n          level: 9\n        });\n\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78;\n      idat[pi++] = 0x9c;\n      let pos = 0;\n\n      while (len > maxBlockLength) {\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = len >> 8 & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n      const adler = adler32(literals, 0, literals.length);\n      idat[pi++] = adler >> 24 & 0xff;\n      idat[pi++] = adler >> 16 & 0xff;\n      idat[pi++] = adler >> 8 & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case _util.ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = width + 7 >> 3;\n          break;\n\n        case _util.ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n\n        case _util.ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n          offsetBytes = 0;\n\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0;\n        literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n        offsetLiterals = 0;\n\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++;\n\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n      const idat = deflateSync(literals);\n      const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n      return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n    }\n\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  }();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n      this.textMatrix = _util.IDENTITY_MATRIX;\n      this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = _util.TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n      this.x = 0;\n      this.y = 0;\n      this.lineX = 0;\n      this.lineY = 0;\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n      this.dashArray = [];\n      this.dashPhase = 0;\n      this.dependencies = [];\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n  }\n\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({\n          fnId: 92,\n          fn: \"group\",\n          items: []\n        });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n\n    return opTree;\n  }\n\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    do {\n      i--;\n    } while (s[i] === \"0\");\n\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = Math.acos(m[0]) * 180 / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n\n    return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n  }\n\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n  exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema) {\n      this.svgFactory = new _display_utils.DOMSVGFactory();\n      this.current = new SVGExtraState();\n      this.transformMatrix = _util.IDENTITY_MATRIX;\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n      this._operatorIdMapping = [];\n\n      for (const op in _util.OPS) {\n        this._operatorIdMapping[_util.OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== _util.OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = _util.IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i]\n        });\n      }\n\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case _util.OPS.beginText:\n            this.beginText();\n            break;\n\n          case _util.OPS.dependency:\n            break;\n\n          case _util.OPS.setLeading:\n            this.setLeading(args);\n            break;\n\n          case _util.OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n\n          case _util.OPS.setFont:\n            this.setFont(args);\n            break;\n\n          case _util.OPS.showText:\n            this.showText(args[0]);\n            break;\n\n          case _util.OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n\n          case _util.OPS.endText:\n            this.endText();\n            break;\n\n          case _util.OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n\n          case _util.OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n\n          case _util.OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n\n          case _util.OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n\n          case _util.OPS.setTextMatrix:\n            this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n            break;\n\n          case _util.OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n\n          case _util.OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n\n          case _util.OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n\n          case _util.OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n\n          case _util.OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n\n          case _util.OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n\n          case _util.OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n\n          case _util.OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n\n          case _util.OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n\n          case _util.OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n\n          case _util.OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n\n          case _util.OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n\n          case _util.OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n\n          case _util.OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n\n          case _util.OPS.setGState:\n            this.setGState(args[0]);\n            break;\n\n          case _util.OPS.fill:\n            this.fill();\n            break;\n\n          case _util.OPS.eoFill:\n            this.eoFill();\n            break;\n\n          case _util.OPS.stroke:\n            this.stroke();\n            break;\n\n          case _util.OPS.fillStroke:\n            this.fillStroke();\n            break;\n\n          case _util.OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n\n          case _util.OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n\n          case _util.OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n\n          case _util.OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n\n          case _util.OPS.paintJpegXObject:\n            this.paintJpegXObject(args[0], args[1], args[2]);\n            break;\n\n          case _util.OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n\n          case _util.OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n\n          case _util.OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n\n          case _util.OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n\n          case _util.OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n\n          case _util.OPS.closePath:\n            this.closePath();\n            break;\n\n          case _util.OPS.closeStroke:\n            this.closeStroke();\n            break;\n\n          case _util.OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n\n          case _util.OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n\n          case _util.OPS.nextLine:\n            this.nextLine();\n            break;\n\n          case _util.OPS.transform:\n            this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n            break;\n\n          case _util.OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n\n          case _util.OPS.endPath:\n            this.endPath();\n            break;\n\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n\n          default:\n            (0, _util.warn)(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.xcoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = _util.IDENTITY_MATRIX;\n      current.lineMatrix = _util.IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n      current.xcoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n\n      if (fontSize === 0) {\n        return;\n      }\n\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n      let x = 0;\n\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if ((0, _util.isNum)(glyph)) {\n          x += -glyph * fontSize * 0.001;\n          continue;\n        }\n\n        const width = glyph.width;\n        const character = glyph.fontChar;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const charWidth = width * widthAdvanceScale + spacing * fontDirection;\n\n        if (!glyph.isInFont && !font.missingFile) {\n          x += charWidth;\n          continue;\n        }\n\n        current.xcoords.push(current.x + x);\n        current.tspan.textContent += character;\n        x += charWidth;\n      }\n\n      if (vertical) {\n        current.y -= x * textHScale;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      let textMatrix = current.textMatrix;\n\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n      this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (this.embedFonts && fontObj.data && !this.embeddedFonts[fontObj.loadedName]) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n      let bold = \"normal\";\n\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n\n      if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n\n      const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n      const bl = _util.Util.applyTransform([0, 0], inv);\n\n      const br = _util.Util.applyTransform([0, height], inv);\n\n      const ul = _util.Util.applyTransform([width, 0], inv);\n\n      const ur = _util.Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n\n      return this._makeShadingPattern(args);\n    }\n\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || _util.IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n      const tilingId = `shading${shadingCount++}`;\n\n      const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n\n      const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n\n      const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n\n      if (paintType === 2) {\n        const cssColor = _util.Util.makeCssRgb(...color);\n\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n\n      this.executeOpTree(this.convertOpList(operatorList));\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n\n        case \"Mesh\":\n          (0, _util.warn)(\"Unimplemented pattern Mesh\");\n          return null;\n\n        case \"Dummy\":\n          return \"hotpink\";\n\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n          y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case _util.OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n            break;\n\n          case _util.OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n\n          case _util.OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n\n          case _util.OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n            j += 6;\n            break;\n\n          case _util.OPS.curveTo2:\n            d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n\n          case _util.OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n            j += 4;\n            break;\n\n          case _util.OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      const clipElement = current.element.cloneNode(true);\n\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n\n      current.activeClipUrl = `url(#${clipId})`;\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {}\n\n    setFlatness(flatness) {}\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n\n          case \"Font\":\n            this.setFont(value);\n            break;\n\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n\n          default:\n            (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n      element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n      element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n\n      this.fill();\n    }\n\n    fillStroke() {\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintJpegXObject(objId, w, h) {\n      const imgObj = this.objs.get(objId);\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgObj.src);\n      imgEl.setAttributeNS(null, \"width\", pf(w));\n      imgEl.setAttributeNS(null, \"height\", pf(h));\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-h));\n      imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / w)} ${pf(-1 / h)})`);\n\n      this._ensureTransformGroup().appendChild(imgEl);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n\n      if (!imgData) {\n        (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n      this.defs.appendChild(mask);\n\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n      this.svg = rootGroup;\n      return svg;\n    }\n\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n\n      return this.current.clipGroup;\n    }\n\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n\n      return this.tgrp;\n    }\n\n  };\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFNodeStream = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _network_utils = __w_pdfjs_require__(20);\n\nconst fs = require(\"fs\");\n\nconst http = require(\"http\");\n\nconst https = require(\"https\");\n\nconst url = require(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader);\n    this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n    this._rangeRequestReaders.push(rangeReader);\n\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n\n}\n\nexports.PDFNodeStream = PDFNodeStream;\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length;\n    this._loaded = 0;\n    this._filename = null;\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._readableStream = null;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    this._headersCapability = (0, _util.createPromiseCapability)();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n\n    if (chunk === null) {\n      this._readCapability = (0, _util.createPromiseCapability)();\n      return this.read();\n    }\n\n    this._loaded += chunk.length;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength\n      });\n    }\n\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n\n      return;\n    }\n\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new _util.AbortException(\"streaming is disabled\"));\n    }\n\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n\n    if (chunk === null) {\n      this._readCapability = (0, _util.createPromiseCapability)();\n      return this.read();\n    }\n\n    this._loaded += chunk.length;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded\n      });\n    }\n\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n\n      return;\n    }\n\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n\n}\n\nfunction createRequestOptions(url, headers) {\n  return {\n    protocol: url.protocol,\n    auth: url.auth,\n    host: url.hostname,\n    port: url.port,\n    path: url.path,\n    method: \"GET\",\n    headers\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n\n        this._headersCapability.reject(error);\n\n        return;\n      }\n\n      this._headersCapability.resolve();\n\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n    };\n\n    this._request = null;\n\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    } else {\n      this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n\n      this._headersCapability.reject(reason);\n    });\n\n    this._request.end();\n  }\n\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    this._httpHeaders = {};\n\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      this._httpHeaders[property] = value;\n    }\n\n    this._httpHeaders[\"Range\"] = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    } else {\n      this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n\n    this._request.end();\n  }\n\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n\n        this._storedError = error;\n\n        this._headersCapability.reject(error);\n\n        return;\n      }\n\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n\n      this._headersCapability.resolve();\n    });\n  }\n\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, {\n      start,\n      end: end - 1\n    }));\n  }\n\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResponseStatusError = createResponseStatusError;\nexports.extractFilenameFromHeader = extractFilenameFromHeader;\nexports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\nexports.validateResponseStatus = validateResponseStatus;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _content_disposition = __w_pdfjs_require__(21);\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange\n}) {\n  (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined\n  };\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n  if (contentDisposition) {\n    let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n    return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n\n  return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  tmp = rfc2231getparam(contentDisposition);\n\n  if (tmp) {\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n  }\n\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        if (/^utf-?8$/i.test(encoding)) {\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n\n    return value;\n  }\n\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      value = textdecode(\"utf-8\", value);\n\n      if (needsEncodingFixup) {\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n\n    return value;\n  }\n\n  function rfc2231getparam(contentDisposition) {\n    const matches = [];\n    let match;\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n    while ((match = iter.exec(contentDisposition)) !== null) {\n      let [, n, quot, part] = match;\n      n = parseInt(n, 10);\n\n      if (n in matches) {\n        if (n === 0) {\n          break;\n        }\n\n        continue;\n      }\n\n      matches[n] = [quot, part];\n    }\n\n    const parts = [];\n\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        break;\n      }\n\n      let [quot, part] = matches[n];\n      part = rfc2616unquote(part);\n\n      if (quot) {\n        part = unescape(part);\n\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n\n      parts.push(part);\n    }\n\n    return parts.join(\"\");\n  }\n\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1;\n        }\n\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n\n      value = parts.join('\"');\n    }\n\n    return value;\n  }\n\n  function rfc5987decode(extvalue) {\n    const encodingend = extvalue.indexOf(\"'\");\n\n    if (encodingend === -1) {\n      return extvalue;\n    }\n\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n\n  function rfc2047decode(value) {\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n\n    return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (_, charset, encoding, text) {\n      if (encoding === \"q\" || encoding === \"Q\") {\n        text = text.replace(/_/g, \" \");\n        text = text.replace(/=([0-9a-fA-F]{2})/g, function (_, hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        });\n        return textdecode(charset, text);\n      }\n\n      try {\n        text = atob(text);\n      } catch (e) {}\n\n      return textdecode(charset, text);\n    });\n  }\n\n  return \"\";\n}\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFNetworkStream = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _network_utils = __w_pdfjs_require__(20);\n\n;\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n\n  if (typeof data !== \"string\") {\n    return data;\n  }\n\n  const array = (0, _util.stringToBytes)(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = this.isHttp && args.httpHeaders || {};\n    this.withCredentials = args.withCredentials || false;\n\n    this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n      return new XMLHttpRequest();\n    };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end\n    };\n\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = this.pendingRequests[xhrId] = {\n      xhr\n    };\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      xhr.setRequestHeader(property, value);\n    }\n\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n    xhr.send(null);\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n\n    if (!pendingRequest) {\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n\n    if (!pendingRequest) {\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n\n      return;\n    }\n\n    const xhrStatus = xhr.status || OK_RESPONSE;\n    const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n\n}\n\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader);\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n    this._rangeRequestReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n\n}\n\nexports.PDFNetworkStream = PDFNetworkStream;\n\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n\n    const {\n      allowRangeRequests,\n      suggestedLength\n    } = (0, _network_utils.validateRangeRequestCapabilities)({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n\n    this._contentLength = suggestedLength || this._contentLength;\n    this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: args.chunk,\n          done: false\n        });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n\n    this._done = true;\n\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = (0, _network_utils.createResponseStatusError)(status, url);\n    this._storedError = exception;\n\n    this._headersReceivedCapability.reject(exception);\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._headersReceivedCapability.reject(reason);\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n\n    this._fullRequestReader = null;\n  }\n\n}\n\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunk = chunk;\n    }\n\n    this._done = true;\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n\n    this._close();\n  }\n\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFFetchStream = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _network_utils = __w_pdfjs_require__(20);\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\"\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n\n    headers.append(property, value);\n  }\n\n  return headers;\n}\n\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader);\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n    this._rangeRequestReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n\n}\n\nexports.PDFFetchStream = PDFFetchStream;\n\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = (0, _util.createPromiseCapability)();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._headers = createHeaders(this._stream.httpHeaders);\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n\n      this._reader = response.body.getReader();\n\n      this._headersCapability.resolve();\n\n      const getResponseHeader = name => {\n        return response.headers.get(name);\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: this._stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n      }\n    }).catch(this._headersCapability.reject);\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n\n    this._loaded += value.byteLength;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength\n      });\n    }\n\n    const buffer = new Uint8Array(value).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n\n}\n\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n\n      this._readCapability.resolve();\n\n      this._reader = response.body.getReader();\n    });\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n\n    this._loaded += value.byteLength;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded\n      });\n    }\n\n    const buffer = new Uint8Array(value).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n\n}\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.js.map"]}]}